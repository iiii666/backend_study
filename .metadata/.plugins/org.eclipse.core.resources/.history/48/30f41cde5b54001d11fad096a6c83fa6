package codingtest;

import java.util.LinkedList;
import java.util.Queue;

public class Main {
	public static void main(String[] args) {
		Solution s = new Solution();
		System.out.println(s.solution("()()"));
	}

}

class Solution {
	boolean solution(String s) {
		boolean answer = true;
		Queue<String> q = new LinkedList<String>();
		StringBuffer sb = new StringBuffer(s);

		for (int i = 0; i < sb.length(); i++) {
			q.add(Character.toString(sb.charAt(i)));
		}
		int left = 0;
		int right =0;
		String temp ;
		while(true) {
			temp = q.poll();
			System.out.println(temp);
			if(temp== null) {
				break;
				
			}else if(left == right) {
				if(temp.equals(")")) {
					System.out.println(temp);
					answer = false;
					return answer;
				}else {
					continue;
				}
			}else {
				if(temp.equals(")")) {
					left ++;
				}else {
					right ++;
				}
			}
			
			
		}
//		for(int i= 0; i<temp;i++) {
//			if(i == 0) {
//				if(q.poll().equals(")")) {
//					answer = false;
//					return answer;
//				}else {
//					right ++;
//				}
//			}else {
//				if(q.poll().equals(")")) {
//					left++;
//				}else {
//					right++;
//				}
//			}
//			
//		}
		if(left == right) {
			answer = true;
			return answer;
		}else {
			answer =false;
			return answer;
		}
			
		
	}
}